import{P as k,O as b,p as P,E as f,A as u,d as D,S,k as E,B as T,s as x,m as N}from"./index-hE0wlW8G.js";const v={eip155:{native:{assetNamespace:"slip44",assetReference:"60"},defaultTokenNamespace:"erc20"},solana:{native:{assetNamespace:"slip44",assetReference:"501"},defaultTokenNamespace:"token"}};class I extends Error{}function F(){const{sdkType:t,sdkVersion:s,projectId:a}=b.getSnapshot(),n=new URL("https://rpc.walletconnect.org/v1/json-rpc");return n.searchParams.set("projectId",a),n.searchParams.set("st",t),n.searchParams.set("sv",s),n.searchParams.set("source","fund-wallet"),n.toString()}async function l(t,s){const a=F(),{projectId:n}=b.getSnapshot(),r={jsonrpc:"2.0",id:1,method:t,params:{...s||{},projectId:n}},o=await(await fetch(a,{method:"POST",body:JSON.stringify(r),headers:{"Content-Type":"application/json"}})).json();if(o.error)throw new I(o.error.message);return o}async function L(t){return(await l("reown_getExchanges",t)).result}async function R(t){return(await l("reown_getExchangePayUrl",t)).result}async function H(t){return(await l("reown_getExchangeBuyStatus",t)).result}function U(t,s){const{chainNamespace:a,chainId:n}=k.parseCaipNetworkId(t),r=v[a];if(!r)throw new Error(`Unsupported chain namespace for CAIP-19 formatting: ${a}`);let c=r.native.assetNamespace,o=r.native.assetReference;return s!=="native"&&(c=r.defaultTokenNamespace,o=s),`${`${a}:${n}`}/${c}:${o}`}const O={network:"eip155:1",asset:"native",metadata:{name:"Ethereum",symbol:"ETH",decimals:18}},_={network:"eip155:8453",asset:"native",metadata:{name:"Ethereum",symbol:"ETH",decimals:18}},$={network:"eip155:8453",asset:"0x833589fcd6edb6e08f4c7c32d4f71b54bda02913",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},j={network:"eip155:84532",asset:"native",metadata:{name:"Ethereum",symbol:"ETH",decimals:18}},q={network:"eip155:1",asset:"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},B={network:"eip155:42161",asset:"0xaf88d065e77c8cC2239327C5EDb3A432268e5831",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},K={network:"eip155:137",asset:"0x2791bca1f2de4661ed88a30c99a7a9449aa84174",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},Y={network:"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",asset:"EPjFWdd5AufqSSqeM2qN1xzybapC8G4wEGGkZwyTDt1v",metadata:{name:"USD Coin",symbol:"USDC",decimals:6}},G={network:"eip155:1",asset:"0xdAC17F958D2ee523a2206206994597C13D831ec7",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},J={network:"eip155:10",asset:"0x94b008aA00579c1307B0EF2c499aD98a8ce58e58",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},W={network:"eip155:42161",asset:"0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},z={network:"eip155:137",asset:"0xc2132d05d31c914a87c6611c10748aeb04b58e8f",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},Z={network:"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",asset:"Es9vMFrzaCERmJfrF4H2FYD4KCoNkY11McCe8BenwNYB",metadata:{name:"Tether USD",symbol:"USDT",decimals:6}},M={network:"solana:5eykt4UsFv8P8NJdTREpY1vzqKqZKvdp",asset:"native",metadata:{name:"Solana",symbol:"SOL",decimals:9}},V={ethereumETH:O,baseETH:_,baseUSDC:$,baseSepoliaETH:j,ethereumUSDC:q,arbitrumUSDC:B,polygonUSDC:K,solanaUSDC:Y,ethereumUSDT:G,optimismUSDT:J,arbitrumUSDT:W,polygonUSDT:z,solanaUSDT:Z,solanaSOL:M};function X(t){return Object.values(V).filter(s=>s.network===t)}const Q=0,C={paymentAsset:null,amount:10,tokenAmount:0,priceLoading:!1,error:null,exchanges:[],isLoading:!1,currentPayment:void 0,isPaymentInProgress:!1,paymentId:"",assets:[]},e=P(C),m={state:e,subscribe(t){return N(e,()=>t(e))},subscribeKey(t,s){return x(e,t,s)},resetState(){Object.assign(e,{...C})},async getAssetsForNetwork(t){const s=X(t),a=await m.getAssetsImageAndPrice(s),n=s.map(r=>{var i,p,d,y;const c=r.asset==="native"?E():`${r.network}:${r.asset}`,o=a.find(A=>{var w,g,h;return((h=(g=(w=A.fungibles)==null?void 0:w[0])==null?void 0:g.address)==null?void 0:h.toLowerCase())===c.toLowerCase()});return{...r,price:((p=(i=o==null?void 0:o.fungibles)==null?void 0:i[0])==null?void 0:p.price)||1,metadata:{...r.metadata,iconUrl:(y=(d=o==null?void 0:o.fungibles)==null?void 0:d[0])==null?void 0:y.iconUrl}}});return e.assets=n,n},async getAssetsImageAndPrice(t){const s=t.map(n=>n.asset==="native"?E():`${n.network}:${n.asset}`);return await Promise.all(s.map(n=>T.fetchTokenPrice({addresses:[n]})))},getTokenAmount(){var s;if(!((s=e==null?void 0:e.paymentAsset)!=null&&s.price))throw new Error("Cannot get token price");const t=new Intl.NumberFormat("en-US",{minimumFractionDigits:0,maximumFractionDigits:8}).format(e.amount/e.paymentAsset.price);return Number(t)},setAmount(t){var s;e.amount=t,(s=e.paymentAsset)!=null&&s.price&&(e.tokenAmount=m.getTokenAmount())},setPaymentAsset(t){e.paymentAsset=t},async fetchExchanges(){try{if(!e.paymentAsset){e.exchanges=[],e.isLoading=!1;return}e.isLoading=!0;const t=await L({page:Q,asset:U(e.paymentAsset.network,e.paymentAsset.asset),amount:e.amount.toString()});e.exchanges=t.exchanges.slice(0,2)}catch{throw S.showError("Unable to get exchanges"),new Error("Unable to get exchanges")}finally{e.isLoading=!1}},async getPayUrl(t,s){try{const a=Number(s.amount),n=await R({exchangeId:t,asset:U(s.network,s.asset),amount:a.toString(),recipient:`${s.network}:${s.recipient}`});return f.sendEvent({type:"track",event:"PAY_EXCHANGE_SELECTED",properties:{exchange:{id:t},configuration:{network:s.network,asset:s.asset,recipient:s.recipient,amount:a},currentPayment:{type:"exchange",exchangeId:t},source:"fund-from-exchange",headless:!1}}),n}catch(a){throw a instanceof Error&&a.message.includes("is not supported")?new Error("Asset not supported"):new Error(a.message)}},async handlePayWithExchange(t){try{if(!u.state.address)throw new Error("No account connected");if(!e.paymentAsset)throw new Error("No payment asset selected");const s=D.returnOpenHref("","popupWindow","scrollbar=yes,width=480,height=720");if(!s)throw new Error("Could not create popup window");e.isPaymentInProgress=!0,e.paymentId=crypto.randomUUID(),e.currentPayment={type:"exchange",exchangeId:t};const{network:a,asset:n}=e.paymentAsset,r={network:a,asset:n,amount:e.tokenAmount,recipient:u.state.address},c=await m.getPayUrl(t,r);if(!c){try{s.close()}catch(o){console.error("Unable to close popup window",o)}throw new Error("Unable to initiate payment")}e.currentPayment.sessionId=c.sessionId,e.currentPayment.status="IN_PROGRESS",e.currentPayment.exchangeId=t,s.location.href=c.url}catch{e.error="Unable to initiate payment",S.showError(e.error)}},async waitUntilComplete({exchangeId:t,sessionId:s,paymentId:a,retries:n=20}){const r=await m.getBuyStatus(t,s,a);if(r.status==="SUCCESS"||r.status==="FAILED")return r;if(n===0)throw new Error("Unable to get deposit status");return await new Promise(c=>{setTimeout(c,5e3)}),m.waitUntilComplete({exchangeId:t,sessionId:s,paymentId:a,retries:n-1})},async getBuyStatus(t,s,a){var n,r,c,o;try{if(!e.currentPayment)throw new Error("No current payment");const i=await H({sessionId:s,exchangeId:t});return e.currentPayment.status=i.status,(i.status==="SUCCESS"||i.status==="FAILED")&&(e.currentPayment.result=i.txHash,e.isPaymentInProgress=!1,f.sendEvent({type:"track",event:i.status==="SUCCESS"?"PAY_SUCCESS":"PAY_ERROR",properties:{source:"fund-from-exchange",paymentId:a,configuration:{network:((n=e.paymentAsset)==null?void 0:n.network)||"",asset:((r=e.paymentAsset)==null?void 0:r.asset)||"",recipient:u.state.address||"",amount:e.amount},currentPayment:{type:"exchange",exchangeId:(c=e.currentPayment)==null?void 0:c.exchangeId,sessionId:(o=e.currentPayment)==null?void 0:o.sessionId,result:i.txHash}}})),i}catch{return{status:"UNKNOWN",txHash:""}}},reset(){e.currentPayment=void 0,e.isPaymentInProgress=!1,e.paymentId="",e.paymentAsset=null,e.amount=0,e.tokenAmount=0,e.priceLoading=!1,e.error=null,e.exchanges=[],e.isLoading=!1}};export{m as E};
